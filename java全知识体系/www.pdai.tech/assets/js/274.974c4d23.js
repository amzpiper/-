(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{736:function(t,a,r){"use strict";r.r(a);var v=r(11),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"事务理论---acid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事务理论---acid"}},[t._v("¶")]),t._v(" 事务理论 - ACID")]),t._v(" "),r("blockquote",[r("p",[t._v("事务的四个基本特性。@pdai")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%BA%8B%E5%8A%A1%E7%90%86%E8%AE%BA---acid"}},[t._v("事务理论 - ACID")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFacid"}},[t._v("什么是ACID")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#acid%E9%9D%A0%E4%BB%80%E4%B9%88%E4%BF%9D%E8%AF%81%E7%9A%84%E5%91%A2"}},[t._v("ACID靠什么保证的呢？")])])])])]),t._v(" "),r("h2",{attrs:{id:"什么是acid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是acid"}},[t._v("¶")]),t._v(" 什么是ACID")]),t._v(" "),r("p",[t._v("一个事务有四个基本特性，也就是我们常说的（ACID）：")]),t._v(" "),r("ol",[r("li",[r("p",[r("strong",[t._v("Atomicity（原子性）")]),t._v("：事务是一个不可分割的整体，事务内所有操作要么全做成功，要么全失败。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Consistency（一致性）")]),t._v("：务执行前后，数据从一个状态到另一个状态必须是一致的（A向B转账，不能出现A扣了钱，B却没收到）。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Isolation（隔离性）")]),t._v("： 多个并发事务之间相互隔离，不能互相干扰。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Durablity（持久性）")]),t._v("：事务完成后，对数据库的更改是永久保存的，不能回滚。")])])]),t._v(" "),r("h2",{attrs:{id:"acid靠什么保证的呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#acid靠什么保证的呢"}},[t._v("¶")]),t._v(" ACID靠什么保证的呢？")]),t._v(" "),r("p",[t._v("以MySQL为例：")]),t._v(" "),r("p",[r("strong",[t._v("A原子性")]),t._v("由undo log日志保证，它记录了需要回滚的日志信息，事务回滚时撤销已经执行成功的sql")]),t._v(" "),r("p",[r("strong",[t._v("C一致性")]),t._v("一般由代码层面来保证")]),t._v(" "),r("p",[r("strong",[t._v("I隔离性")]),t._v("由MVCC来保证")]),t._v(" "),r("p",[r("strong",[t._v("D持久性")]),t._v("由内存+redo log来保证，mysql修改数据同时在内存和redo log记录这次操作，事务提交的时候通过redo log刷盘，宕机的时候可以从redo log恢复")])])}),[],!1,null,null,null);a.default=_.exports}}]);