(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{679:function(t,s,a){"use strict";a.r(s);var i=a(11),_=Object(i.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redis进阶---高可用：哨兵机制redis-sentinel详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis进阶---高可用：哨兵机制redis-sentinel详解"}},[t._v("¶")]),t._v(" Redis进阶 - 高可用：哨兵机制（Redis Sentinel）详解")]),t._v(" "),a("blockquote",[a("p",[t._v("在上文主从复制的基础上，如果注节点出现故障该怎么办呢？ 在 Redis 主从集群中，哨兵机制是实现主从库自动切换的关键机制，它有效地解决了主从复制模式下故障转移的问题。@pdai")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#redis%E8%BF%9B%E9%98%B6---%E9%AB%98%E5%8F%AF%E7%94%A8%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6redis-sentinel%E8%AF%A6%E8%A7%A3"}},[t._v("Redis进阶 - 高可用：哨兵机制（Redis Sentinel）详解")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6redis-sentinel"}},[t._v("哨兵机制（Redis Sentinel）")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%93%A8%E5%85%B5%E9%9B%86%E7%BE%A4%E7%9A%84%E7%BB%84%E5%BB%BA"}},[t._v("哨兵集群的组建")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%93%A8%E5%85%B5%E7%9B%91%E6%8E%A7redis%E5%BA%93"}},[t._v("哨兵监控Redis库")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%BB%E5%BA%93%E4%B8%8B%E7%BA%BF%E7%9A%84%E5%88%A4%E5%AE%9A"}},[t._v("主库下线的判定")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%93%A8%E5%85%B5%E9%9B%86%E7%BE%A4%E7%9A%84%E9%80%89%E4%B8%BE"}},[t._v("哨兵集群的选举")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%B0%E4%B8%BB%E5%BA%93%E7%9A%84%E9%80%89%E5%87%BA"}},[t._v("新主库的选出")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%85%E9%9A%9C%E7%9A%84%E8%BD%AC%E7%A7%BB"}},[t._v("故障的转移")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[t._v("参考文章")])])])])]),t._v(" "),a("h2",{attrs:{id:"哨兵机制redis-sentinel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哨兵机制redis-sentinel"}},[t._v("¶")]),t._v(" 哨兵机制（Redis Sentinel）")]),t._v(" "),a("blockquote",[a("p",[t._v("Redis Sentinel，即Redis哨兵，在Redis 2.8版本开始引入。哨兵的核心功能是主节点的自动故障转移。")])]),t._v(" "),a("p",[t._v("下图是一个典型的哨兵集群监控的逻辑图：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-1.png",loading:"lazy"}})]),t._v(" "),a("p",[t._v("哨兵实现了什么功能呢？下面是Redis官方文档的描述：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("监控（Monitoring）")]),t._v("：哨兵会不断地检查主节点和从节点是否运作正常。")]),t._v(" "),a("li",[a("strong",[t._v("自动故障转移（Automatic failover）")]),t._v("：当主节点不能正常工作时，哨兵会开始自动故障转移操作，它会将失效主节点的其中一个从节点升级为新的主节点，并让其他从节点改为复制新的主节点。")]),t._v(" "),a("li",[a("strong",[t._v("配置提供者（Configuration provider）")]),t._v("：客户端在初始化时，通过连接哨兵来获得当前Redis服务的主节点地址。")]),t._v(" "),a("li",[a("strong",[t._v("通知（Notification）")]),t._v("：哨兵可以将故障转移的结果发送给客户端。")])]),t._v(" "),a("p",[t._v("其中，监控和自动故障转移功能，使得哨兵可以及时发现主节点故障并完成转移；而配置提供者和通知功能，则需要在与客户端的交互中才能体现。")]),t._v(" "),a("h3",{attrs:{id:"哨兵集群的组建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哨兵集群的组建"}},[t._v("¶")]),t._v(" 哨兵集群的组建")]),t._v(" "),a("blockquote",[a("p",[t._v("上图中哨兵集群是如何组件的呢？哨兵实例之间可以相互发现，要归功于 Redis 提供的 pub/sub 机制，也就是发布 / 订阅机制。")])]),t._v(" "),a("p",[t._v("在主从集群中，主库上有一个名为"),a("code",[t._v("__sentinel__:hello")]),t._v("的频道，不同哨兵就是通过它来相互发现，实现互相通信的。在下图中，哨兵 1 把自己的 IP（172.16.19.3）和端口（26579）发布到"),a("code",[t._v("__sentinel__:hello")]),t._v("频道上，哨兵 2 和 3 订阅了该频道。那么此时，哨兵 2 和 3 就可以从这个频道直接获取哨兵 1 的 IP 地址和端口号。然后，哨兵 2、3 可以和哨兵 1 建立网络连接。")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-6.jpg",loading:"lazy"}})]),t._v(" "),a("p",[t._v("通过这个方式，哨兵 2 和 3 也可以建立网络连接，这样一来，哨兵集群就形成了。它们相互间可以通过网络连接进行通信，比如说对主库有没有下线这件事儿进行判断和协商。")]),t._v(" "),a("h3",{attrs:{id:"哨兵监控redis库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哨兵监控redis库"}},[t._v("¶")]),t._v(" 哨兵监控Redis库")]),t._v(" "),a("blockquote",[a("p",[t._v("哨兵监控什么呢？怎么监控呢？")])]),t._v(" "),a("p",[t._v("这是由哨兵向主库发送 INFO 命令来完成的。就像下图所示，哨兵 2 给主库发送 INFO 命令，主库接受到这个命令后，就会把从库列表返回给哨兵。接着，哨兵就可以根据从库列表中的连接信息，和每个从库建立连接，并在这个连接上持续地对从库进行监控。哨兵 1 和 3 可以通过相同的方法和从库建立连接。")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-7.jpg",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"主库下线的判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主库下线的判定"}},[t._v("¶")]),t._v(" 主库下线的判定")]),t._v(" "),a("blockquote",[a("p",[t._v("哨兵如何判断主库已经下线了呢？")])]),t._v(" "),a("p",[t._v("首先要理解两个概念："),a("strong",[t._v("主观下线")]),t._v("和"),a("strong",[t._v("客观下线")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("主观下线")]),t._v("：任何一个哨兵都是可以监控探测，并作出Redis节点下线的判断；")]),t._v(" "),a("li",[a("strong",[t._v("客观下线")]),t._v("：有哨兵集群共同决定Redis节点是否下线；")])]),t._v(" "),a("p",[t._v("当某个哨兵（如下图中的哨兵2）判断主库“主观下线”后，就会给其他哨兵发送 "),a("code",[t._v("is-master-down-by-addr")]),t._v(" 命令。接着，其他哨兵会根据自己和主库的连接情况，做出 Y 或 N 的响应，Y 相当于赞成票，N 相当于反对票。")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-2.jpg",loading:"lazy"}})]),t._v(" "),a("p",[t._v("如果赞成票数（这里是2）是大于等于哨兵配置文件中的 "),a("code",[t._v("quorum")]),t._v(" 配置项（比如这里如果是quorum=2）, 则可以判定"),a("strong",[t._v("主库客观下线")]),t._v("了。")]),t._v(" "),a("h3",{attrs:{id:"哨兵集群的选举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哨兵集群的选举"}},[t._v("¶")]),t._v(" 哨兵集群的选举")]),t._v(" "),a("blockquote",[a("p",[t._v("判断完主库下线后，由哪个哨兵节点来执行主从切换呢？这里就需要哨兵集群的选举机制了。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("为什么必然会出现选举/共识机制")]),t._v("？")])]),t._v(" "),a("p",[t._v("为了避免哨兵的单点情况发生，所以需要一个哨兵的分布式集群。作为分布式集群，必然涉及共识问题（即选举问题）；同时故障的转移和通知都只需要一个主的哨兵节点就可以了。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("哨兵的选举机制是什么样的")]),t._v("？")])]),t._v(" "),a("p",[t._v("哨兵的选举机制其实很简单，就是一个Raft选举算法： "),a("strong",[t._v("选举的票数大于等于num(sentinels)/2+1时，将成为领导者，如果没有超过，继续选举")])]),t._v(" "),a("p",[t._v("Raft算法你可以参看这篇文章"),a("RouterLink",{attrs:{to:"/md/algorithm/alg-domain-distribute-x-raft.html"}},[t._v("分布式算法 - Raft算法")])],1),t._v(" "),a("ul",[a("li",[a("strong",[t._v("任何一个想成为 Leader 的哨兵，要满足两个条件")]),t._v("：\n"),a("ul",[a("li",[t._v("第一，拿到半数以上的赞成票；")]),t._v(" "),a("li",[t._v("第二，拿到的票数同时还需要大于等于哨兵配置文件中的 quorum 值。")])])])]),t._v(" "),a("p",[t._v("以 3 个哨兵为例，假设此时的 quorum 设置为 2，那么，任何一个想成为 Leader 的哨兵只要拿到 2 张赞成票，就可以了。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("更进一步理解")]),t._v(" "),a("p",[t._v("这里很多人会搞混 "),a("strong",[t._v("判定客观下线")]),t._v(" 和 "),a("strong",[t._v("是否能够主从切换（用到选举机制）")]),t._v(" 两个概念，我们再看一个例子。")]),t._v(" "),a("p",[t._v("Redis 1主4从，5个哨兵，哨兵配置quorum为2，如果3个哨兵故障，当主库宕机时，哨兵能否判断主库“客观下线”？能否自动切换？")])]),t._v(" "),a("p",[t._v("经过实际测试：")]),t._v(" "),a("p",[t._v("1、哨兵集群可以判定主库“主观下线”。由于quorum=2，所以当一个哨兵判断主库“主观下线”后，询问另外一个哨兵后也会得到同样的结果，2个哨兵都判定“主观下线”，达到了quorum的值，因此，"),a("strong",[t._v("哨兵集群可以判定主库为“客观下线”")]),t._v("。")]),t._v(" "),a("p",[t._v("2、"),a("strong",[t._v("但哨兵不能完成主从切换")]),t._v("。哨兵标记主库“客观下线后”，在选举“哨兵领导者”时，一个哨兵必须拿到超过多数的选票(5/2+1=3票)。但目前只有2个哨兵活着，无论怎么投票，一个哨兵最多只能拿到2票，永远无法达到"),a("code",[t._v("N/2+1")]),t._v("选票的结果。")]),t._v(" "),a("h3",{attrs:{id:"新主库的选出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新主库的选出"}},[t._v("¶")]),t._v(" 新主库的选出")]),t._v(" "),a("blockquote",[a("p",[t._v("主库既然判定客观下线了，那么如何从剩余的从库中选择一个新的主库呢？")])]),t._v(" "),a("ul",[a("li",[t._v("过滤掉不健康的（下线或断线），没有回复过哨兵ping响应的从节点")]),t._v(" "),a("li",[t._v("选择"),a("code",[t._v("salve-priority")]),t._v("从节点优先级最高（redis.conf）的")]),t._v(" "),a("li",[t._v("选择复制偏移量最大，指复制最完整的从节点")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-3.jpg",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"故障的转移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#故障的转移"}},[t._v("¶")]),t._v(" 故障的转移")]),t._v(" "),a("blockquote",[a("p",[t._v("新的主库选择出来后，就可以开始进行故障的转移了。")])]),t._v(" "),a("p",[t._v("假设根据我们一开始的图：（我们假设：判断主库客观下线了，同时选出"),a("code",[t._v("sentinel 3")]),t._v("是哨兵leader）")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-1.png",loading:"lazy"}})]),t._v(" "),a("p",[a("strong",[t._v("故障转移流程如下")]),t._v("：")]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-4.png",loading:"lazy"}})]),t._v(" "),a("ul",[a("li",[t._v("将slave-1脱离原从节点（PS: 5.0 中应该是"),a("code",[t._v("replicaof no one")]),t._v(")，升级主节点，")]),t._v(" "),a("li",[t._v("将从节点slave-2指向新的主节点")]),t._v(" "),a("li",[t._v("通知客户端主节点已更换")]),t._v(" "),a("li",[t._v("将原主节点（oldMaster）变成从节点，指向新的主节点")])]),t._v(" "),a("p",[a("strong",[t._v("转移之后")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/db/redis/db-redis-sen-5.png",loading:"lazy"}})]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("¶")]),t._v(" 参考文章")]),t._v(" "),a("p",[t._v("本文主要借鉴和参考了")]),t._v(" "),a("ul",[a("li",[t._v("https://time.geekbang.org/column/article/275337")]),t._v(" "),a("li",[t._v("https://time.geekbang.org/column/article/274483")]),t._v(" "),a("li",[t._v("https://www.cnblogs.com/andy6/p/10829929.html")])]),t._v(" "),a("p",[t._v("在此基础上重新梳理和总结而成。")]),t._v(" "),a("p",[t._v("一些具体的实践，可以参考这篇文章")]),t._v(" "),a("p",[t._v("https://www.cnblogs.com/kismetv/p/9609938.html")])])}),[],!1,null,null,null);s.default=_.exports}}]);