(window.webpackJsonp=window.webpackJsonp||[]).push([[557],{1018:function(a,t,s){"use strict";s.r(t);var n=s(11),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"spring进阶--spring-ioc实现原理详解之ioc体系结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring进阶--spring-ioc实现原理详解之ioc体系结构设计"}},[a._v("¶")]),a._v(" Spring进阶- Spring IOC实现原理详解之IOC体系结构设计")]),a._v(" "),s("blockquote",[s("p",[a._v("在对IoC有了初步的认知后，我们开始对IOC的实现原理进行深入理解。本文将帮助你站在设计者的角度去看IOC最顶层的结构设计。@pdai")])]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#spring%E8%BF%9B%E9%98%B6--spring-ioc%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%E4%B9%8Bioc%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1"}},[a._v("Spring进阶- Spring IOC实现原理详解之IOC体系结构设计")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%AB%99%E5%9C%A8%E8%AE%BE%E8%AE%A1%E8%80%85%E7%9A%84%E8%A7%92%E5%BA%A6%E8%80%83%E8%99%91%E8%AE%BE%E8%AE%A1ioc%E5%AE%B9%E5%99%A8"}},[a._v("站在设计者的角度考虑设计IOC容器")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#spring-ioc%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1"}},[a._v("Spring IoC的体系结构设计")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#beanfactory%E5%92%8Cbeanregistryioc%E5%AE%B9%E5%99%A8%E5%8A%9F%E8%83%BD%E8%A7%84%E8%8C%83%E5%92%8Cbean%E7%9A%84%E6%B3%A8%E5%86%8C"}},[a._v("BeanFactory和BeanRegistry：IOC容器功能规范和Bean的注册")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#beanfactory%E5%AE%9A%E4%B9%89%E4%BA%86ioc-%E5%AE%B9%E5%99%A8%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD%E8%A7%84%E8%8C%83"}},[a._v("BeanFactory定义了IOC 容器基本功能规范？")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#beanfactory%E4%B8%BA%E4%BD%95%E8%A6%81%E5%AE%9A%E4%B9%89%E8%BF%99%E4%B9%88%E5%A4%9A%E5%B1%82%E6%AC%A1%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%AE%9A%E4%B9%89%E4%BA%86%E5%93%AA%E4%BA%9B%E6%8E%A5%E5%8F%A3"}},[a._v("BeanFactory为何要定义这么多层次的接口？定义了哪些接口？")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E5%B0%86bean%E6%B3%A8%E5%86%8C%E5%88%B0beanfactory%E4%B8%ADbeanregistry"}},[a._v("如何将Bean注册到BeanFactory中？BeanRegistry")])])])]),a._v(" "),s("li",[s("a",{attrs:{href:"#beandefinition%E5%90%84%E7%A7%8Dbean%E5%AF%B9%E8%B1%A1%E5%8F%8A%E5%85%B6%E7%9B%B8%E4%BA%92%E7%9A%84%E5%85%B3%E7%B3%BB"}},[a._v("BeanDefinition：各种Bean对象及其相互的关系")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#applicationcontextioc%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%AE%9E%E7%8E%B0"}},[a._v("ApplicationContext：IOC接口设计和实现")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#applicationcontext%E6%8E%A5%E5%8F%A3%E7%9A%84%E8%AE%BE%E8%AE%A1"}},[a._v("ApplicationContext接口的设计")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#applicationcontext%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%AE%9E%E7%8E%B0"}},[a._v("ApplicationContext接口的实现")])])])])])]),a._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[a._v("参考文章")])])])])]),a._v(" "),s("h2",{attrs:{id:"站在设计者的角度考虑设计ioc容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#站在设计者的角度考虑设计ioc容器"}},[a._v("¶")]),a._v(" 站在设计者的角度考虑设计IOC容器")]),a._v(" "),s("blockquote",[s("p",[a._v("如果让你来设计一个IoC容器，你会怎么设计？我们初步的通过这个问题，来帮助我们更好的理解IOC的设计。")])]),a._v(" "),s("p",[a._v("在设计时，首先需要考虑的是IOC容器的功能（输入和输出), 承接前面的文章，我们初步的画出IOC容器的整体功能。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-7.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("在此基础上，我们初步的去思考，如果作为一个IOC容器的设计者，主体上应该包含哪几个部分：")]),a._v(" "),s("ul",[s("li",[a._v("加载Bean的配置（比如xml配置）\n"),s("ul",[s("li",[a._v("比如不同类型资源的加载，解析成生成统一Bean的定义")])])]),a._v(" "),s("li",[a._v("根据Bean的定义加载生成Bean的实例，并放置在Bean容器中\n"),s("ul",[s("li",[a._v("比如Bean的依赖注入，Bean的嵌套，Bean存放（缓存）等")])])]),a._v(" "),s("li",[a._v("除了基础Bean外，还有常规针对企业级业务的特别Bean\n"),s("ul",[s("li",[a._v("比如国际化Message，事件Event等生成特殊的类结构去支撑")])])]),a._v(" "),s("li",[a._v("对容器中的Bean提供统一的管理和调用\n"),s("ul",[s("li",[a._v("比如用工厂模式管理，提供方法根据名字/类的类型等从容器中获取Bean")])])]),a._v(" "),s("li",[a._v("...")])]),a._v(" "),s("p",[a._v("(pdai：这种思考的过程才是建设性的，知识体系的构建才是高效的)")]),a._v(" "),s("h2",{attrs:{id:"spring-ioc的体系结构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc的体系结构设计"}},[a._v("¶")]),a._v(" Spring IoC的体系结构设计")]),a._v(" "),s("blockquote",[s("p",[a._v("那么我们来看下Spring设计者是如何设计IoC并解决这些问题的。")])]),a._v(" "),s("h3",{attrs:{id:"beanfactory和beanregistry：ioc容器功能规范和bean的注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory和beanregistry：ioc容器功能规范和bean的注册"}},[a._v("¶")]),a._v(" BeanFactory和BeanRegistry：IOC容器功能规范和Bean的注册")]),a._v(" "),s("blockquote",[s("p",[a._v("Spring Bean的创建是典型的工厂模式，这一系列的Bean工厂，也即IOC容器为开发者管理对象间的依赖关系提供了很多便利和基础服务，在Spring中有许多的IOC容器的实现供用户选择和使用，这是IOC容器的基础；在顶层的结构设计主要围绕着BeanFactory和xxxRegistry进行：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("BeanFactory： 工厂模式定义了IOC容器的基本功能规范")])]),a._v(" "),s("li",[s("strong",[a._v("BeanRegistry： 向IOC容器手工注册 BeanDefinition 对象的方法")])])])]),a._v(" "),s("p",[a._v("其相互关系如下：")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-2.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("我们再通过几个问题来辅助理解。")]),a._v(" "),s("h4",{attrs:{id:"beanfactory定义了ioc-容器基本功能规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory定义了ioc-容器基本功能规范"}},[a._v("¶")]),a._v(" BeanFactory定义了IOC 容器基本功能规范？")]),a._v(" "),s("p",[s("strong",[a._v("BeanFactory作为最顶层的一个接口类，它定义了IOC容器的基本功能规范")]),a._v("，BeanFactory 有三个子类：ListableBeanFactory、HierarchicalBeanFactory 和AutowireCapableBeanFactory。我们看下BeanFactory接口：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanFactory")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("    \n      \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//用于取消引用实例并将其与FactoryBean创建的bean区分开来。例如，如果命名的bean是FactoryBean，则获取将返回Factory，而不是Factory返回的实例。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" FACTORY_BEAN_PREFIX "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"&"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n        \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//根据bean的名字和Class类型等来得到bean实例    ")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" requiredType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" requiredType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" requiredType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//返回指定bean的Provider")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectProvider")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBeanProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" requiredType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ObjectProvider")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBeanProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ResolvableType")]),a._v(" requiredType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//检查工厂中是否包含给定name的bean，或者外部注册的bean")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("containsBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//检查所给定name的bean是否为单例/原型")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NoSuchBeanDefinitionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isPrototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NoSuchBeanDefinitionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//判断所给name的类型与type是否匹配")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isTypeMatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ResolvableType")]),a._v(" typeToMatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NoSuchBeanDefinitionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isTypeMatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" typeToMatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NoSuchBeanDefinitionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取给定name的bean的类型")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Nullable")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NoSuchBeanDefinitionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//返回给定name的bean的别名")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAliases")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n     \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br")])]),s("h4",{attrs:{id:"beanfactory为何要定义这么多层次的接口定义了哪些接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory为何要定义这么多层次的接口定义了哪些接口"}},[a._v("¶")]),a._v(" BeanFactory为何要定义这么多层次的接口？定义了哪些接口？")]),a._v(" "),s("p",[a._v("主要是为了"),s("strong",[a._v("区分在 Spring 内部在操作过程中对象的传递和转化过程中，对对象的数据访问所做的限制")]),a._v("。")]),a._v(" "),s("p",[a._v("有哪些接口呢？")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("ListableBeanFactory")]),a._v("：该接口定义了访问容器中 Bean 基本信息的若干方法，如查看Bean 的个数、获取某一类型 Bean 的配置名、查看容器中是否包括某一 Bean 等方法；")]),a._v(" "),s("li",[s("strong",[a._v("HierarchicalBeanFactory")]),a._v("：父子级联 IoC 容器的接口，子容器可以通过接口方法访问父容器； 通过 HierarchicalBeanFactory 接口， Spring 的 IoC 容器可以建立父子层级关联的容器体系，子容器可以访问父容器中的 Bean，但父容器不能访问子容器的 Bean。Spring 使用父子容器实现了很多功能，比如在 Spring MVC 中，展现层 Bean 位于一个子容器中，而业务层和持久层的 Bean 位于父容器中。这样，展现层 Bean 就可以引用业务层和持久层的 Bean，而业务层和持久层的 Bean 则看不到展现层的 Bean。")]),a._v(" "),s("li",[s("strong",[a._v("ConfigurableBeanFactory")]),a._v("：是一个重要的接口，增强了 IoC 容器的可定制性，它定义了设置类装载器、属性编辑器、容器初始化后置处理器等方法；")]),a._v(" "),s("li",[s("strong",[a._v("ConfigurableListableBeanFactory")]),a._v(": ListableBeanFactory 和 ConfigurableBeanFactory的融合；")]),a._v(" "),s("li",[s("strong",[a._v("AutowireCapableBeanFactory")]),a._v("：定义了将容器中的 Bean 按某种规则（如按名字匹配、按类型匹配等）进行自动装配的方法；")])]),a._v(" "),s("h4",{attrs:{id:"如何将bean注册到beanfactory中beanregistry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何将bean注册到beanfactory中beanregistry"}},[a._v("¶")]),a._v(" 如何将Bean注册到BeanFactory中？BeanRegistry")]),a._v(" "),s("p",[a._v("Spring 配置文件中每一个"),s("code",[a._v("<bean>")]),a._v("节点元素在 Spring 容器里都通过一个 BeanDefinition 对象表示，它描述了 Bean 的配置信息。而 BeanDefinitionRegistry 接口提供了向容器手工注册 BeanDefinition 对象的方法。")]),a._v(" "),s("h3",{attrs:{id:"beandefinition：各种bean对象及其相互的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beandefinition：各种bean对象及其相互的关系"}},[a._v("¶")]),a._v(" BeanDefinition：各种Bean对象及其相互的关系")]),a._v(" "),s("blockquote",[s("p",[a._v("Bean对象存在依赖嵌套等关系，所以设计者设计了BeanDefinition，它用来对Bean对象及关系定义；我们在理解时只需要抓住如下三个要点：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("BeanDefinition 定义了各种Bean对象及其相互的关系")])]),a._v(" "),s("li",[s("strong",[a._v("BeanDefinitionReader 这是BeanDefinition的解析器")])]),a._v(" "),s("li",[s("strong",[a._v("BeanDefinitionHolder 这是BeanDefination的包装类，用来存储BeanDefinition，name以及aliases等。")])])])]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("BeanDefinition")])])]),a._v(" "),s("p",[a._v("SpringIOC容器管理了我们定义的各种Bean对象及其相互的关系，Bean对象在Spring实现中是以BeanDefinition来描述的，其继承体系如下")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-3.png",loading:"lazy"}})]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("BeanDefinitionReader")])])]),a._v(" "),s("p",[a._v("Bean 的解析过程非常复杂，功能被分的很细，因为这里需要被扩展的地方很多，必须保证有足够的灵活性，以应对可能的变化。Bean 的解析主要就是对 Spring 配置文件的解析。这个解析过程主要通过下图中的类完成：")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-5.png",loading:"lazy"}})]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("BeanDefinitionHolder")])])]),a._v(" "),s("p",[a._v("BeanDefinitionHolder 这是BeanDefination的包装类，用来存储BeanDefinition，name以及aliases等")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-4.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"applicationcontext：ioc接口设计和实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontext：ioc接口设计和实现"}},[a._v("¶")]),a._v(" ApplicationContext：IOC接口设计和实现")]),a._v(" "),s("blockquote",[s("p",[a._v("IoC容器的接口类是ApplicationContext，很显然它必然继承BeanFactory对Bean规范（最基本的ioc容器的实现）进行定义。而ApplicationContext表示的是应用的上下文，除了对Bean的管理外，还至少应该包含了")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("访问资源")]),a._v("： 对不同方式的Bean配置（即资源）进行加载。(实现ResourcePatternResolver接口)")]),a._v(" "),s("li",[s("strong",[a._v("国际化")]),a._v(": 支持信息源，可以实现国际化。（实现MessageSource接口）")]),a._v(" "),s("li",[s("strong",[a._v("应用事件")]),a._v(": 支持应用事件。(实现ApplicationEventPublisher接口)")])])]),a._v(" "),s("h4",{attrs:{id:"applicationcontext接口的设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontext接口的设计"}},[a._v("¶")]),a._v(" ApplicationContext接口的设计")]),a._v(" "),s("p",[a._v("我们来看下ApplicationContext整体结构")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-51.png",loading:"lazy"}})]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("HierarchicalBeanFactory 和 ListableBeanFactory")]),a._v("： ApplicationContext 继承了 HierarchicalBeanFactory 和 ListableBeanFactory 接口，在此基础上，还通过多个其他的接口扩展了 BeanFactory 的功能：")]),a._v(" "),s("li",[s("strong",[a._v("ApplicationEventPublisher")]),a._v("：让容器拥有发布应用上下文事件的功能，包括容器启动事件、关闭事件等。实现了 ApplicationListener 事件监听接口的 Bean 可以接收到容器事件 ， 并对事件进行响应处理 。 在 ApplicationContext 抽象实现类AbstractApplicationContext 中，我们可以发现存在一个 ApplicationEventMulticaster，它负责保存所有监听器，以便在容器产生上下文事件时通知这些事件监听者。")]),a._v(" "),s("li",[s("strong",[a._v("MessageSource")]),a._v("：为应用提供 i18n 国际化消息访问的功能；")]),a._v(" "),s("li",[s("strong",[a._v("ResourcePatternResolver")]),a._v(" ： 所 有 ApplicationContext 实现类都实现了类似于PathMatchingResourcePatternResolver 的功能，可以通过带前缀的 Ant 风格的资源文件路径装载 Spring 的配置文件。")]),a._v(" "),s("li",[s("strong",[a._v("LifeCycle")]),a._v("：该接口是 Spring 2.0 加入的，该接口提供了 start()和 stop()两个方法，主要用于控制异步处理过程。在具体使用时，该接口同时被 ApplicationContext 实现及具体 Bean 实现， ApplicationContext 会将 start/stop 的信息传递给容器中所有实现了该接口的 Bean，以达到管理和控制 JMX、任务调度等目的。")])]),a._v(" "),s("h4",{attrs:{id:"applicationcontext接口的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontext接口的实现"}},[a._v("¶")]),a._v(" ApplicationContext接口的实现")]),a._v(" "),s("p",[a._v("在考虑ApplicationContext接口的实现时，关键的点在于，不同Bean的配置方式（比如xml,groovy,annotation等）有着不同的资源加载方式，这便衍生除了众多ApplicationContext的实现类。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-61.png",loading:"lazy"}})]),a._v(" "),s("p",[s("strong",[a._v("第一，从类结构设计上看， 围绕着是否需要Refresh容器衍生出两个抽象类")]),a._v("：")]),a._v(" "),s("ul",[s("li",[s("p",[s("strong",[a._v("GenericApplicationContext")]),a._v("： 是初始化的时候就创建容器，往后的每次refresh都不会更改")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("AbstractRefreshableApplicationContext")]),a._v("： AbstractRefreshableApplicationContext及子类的每次refresh都是先清除已有(如果不存在就创建)的容器，然后再重新创建；AbstractRefreshableApplicationContext及子类无法做到GenericApplicationContext"),s("strong",[a._v("混合搭配从不同源头获取bean的定义信息")])])])]),a._v(" "),s("p",[s("strong",[a._v("第二， 从加载的源来看（比如xml,groovy,annotation等）， 衍生出众多类型的ApplicationContext, 典型比如")]),a._v(":")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("FileSystemXmlApplicationContext")]),a._v("：\t从文件系统下的一个或多个xml配置文件中加载上下文定义，也就是说系统盘符中加载xml配置文件。")]),a._v(" "),s("li",[s("strong",[a._v("ClassPathXmlApplicationContext")]),a._v("：\t从类路径下的一个或多个xml配置文件中加载上下文定义，适用于xml配置的方式。")]),a._v(" "),s("li",[s("strong",[a._v("AnnotationConfigApplicationContext")]),a._v("：\t从一个或多个基于java的配置类中加载上下文定义，适用于java注解的方式。")]),a._v(" "),s("li",[s("strong",[a._v("ConfigurableApplicationContext")]),a._v("： 扩展于 ApplicationContext，它新增加了两个主要的方法： refresh()和 close()，让 ApplicationContext 具有启动、刷新和关闭应用上下文的能力。在应用上下文关闭的情况下调用 refresh()即可启动应用上下文，在已经启动的状态下，调用 refresh()则清除缓存并重新装载配置信息，而调用close()则可关闭应用上下文。这些接口方法为容器的控制管理带来了便利，但作为开发者，我们并不需要过多关心这些方法。")])]),a._v(" "),s("p",[s("strong",[a._v("第三， 更进一步理解")]),a._v("：")]),a._v(" "),s("p",[s("em",[s("strong",[a._v("设计者在设计时AnnotationConfigApplicationContext为什么是继承GenericApplicationContext")])]),a._v("？ 因为基于注解的配置，是不太会被运行时修改的，这意味着不需要进行动态Bean配置和刷新容器，所以只需要GenericApplicationContext。")]),a._v(" "),s("p",[a._v("而基于XML这种配置文件，这种文件是容易修改的，需要动态性刷新Bean的支持，所以XML相关的配置必然继承AbstractRefreshableApplicationContext； 且存在多种xml的加载方式（位置不同的设计），所以必然会设计出AbstractXmlApplicationContext, 其中包含对XML配置解析成BeanDefination的过程。")]),a._v(" "),s("p",[a._v("那么细心的你从上图可以发现AnnotationWebConfigApplicationContext却是继承了AbstractRefreshableApplicationContext而不是GenericApplicationContext， "),s("em",[s("strong",[a._v("为什么AnnotationWebConfigApplicationContext继承自AbstractRefreshableApplicationContext呢")])]),a._v(" ？ 因为用户可以通过ApplicationContextInitializer来设置contextInitializerClasses（context-param / init-param）， 在这种情况下用户倾向于刷新Bean的，所以设计者选择让AnnotationWebConfigApplicationContext继承了AbstractRefreshableApplicationContext。（如下是源码中Spring设计者对它的解释）")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("As")]),a._v(" an alternative "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("to")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("setting")]),a._v(" the "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"contextConfigLocation"')]),a._v(" parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" users may\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" implement an "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@link")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("ApplicationContextInitializer")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ApplicationContextInitializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" and set the\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@linkplain")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ContextLoader")]),a._v("#CONTEXT_INITIALIZER_CLASSES_PARAM "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"contextInitializerClasses"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" context"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("param "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" init"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v(" In")]),a._v(" such cases"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" users should favor the "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@link")]),a._v(" #"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("refresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" and "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@link")]),a._v(" #"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" methods over the "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@link")]),a._v(" #"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setConfigLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" which is primarily "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" use by "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@code")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ContextLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("我们把之前的设计要点和设计结构结合起来看：")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/spring/springframework/spring-framework-ioc-source-71.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("到此，基本可以"),s("mark",[a._v("帮助你从顶层构建对IoC容器的设计理解，而不是过早沉溺于代码的细节")]),a._v("; 所以《Java全栈知识体系》最大的目标是帮助你构筑体系化的认知，如果你自己去看源码而不站在顶层设计角度出发， 你多半会捡了芝麻丢了西瓜，时间一长啥印象没有。@pdai")]),a._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("¶")]),a._v(" 参考文章")]),a._v(" "),s("p",[a._v("https://www.cnblogs.com/ITtangtang/p/3978349.html")])])}),[],!1,null,null,null);t.default=e.exports}}]);