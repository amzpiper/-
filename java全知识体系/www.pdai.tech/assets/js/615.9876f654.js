(window.webpackJsonp=window.webpackJsonp||[]).push([[615],{1078:function(a,t,r){"use strict";r.r(t);var i=r(11),E=Object(i.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"springboot集成连接池---数据库连接池和默认连接池hikaricp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成连接池---数据库连接池和默认连接池hikaricp"}},[a._v("¶")]),a._v(" SpringBoot集成连接池 - 数据库连接池和默认连接池HikariCP")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E8%BF%9E%E6%8E%A5%E6%B1%A0---%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%92%8C%E9%BB%98%E8%AE%A4%E8%BF%9E%E6%8E%A5%E6%B1%A0hikaricp"}},[a._v("SpringBoot集成连接池 - 数据库连接池和默认连接池HikariCP")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87"}},[a._v("知识准备")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[a._v("什么是数据库连接池？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86"}},[a._v("数据库连接池基本原理？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[a._v("有哪些常见的数据库连接池？")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#springboot2%E4%BD%BF%E7%94%A8hikaricp"}},[a._v("SpringBoot2使用HikariCP")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#springboot2%E9%BB%98%E8%AE%A4%E8%BF%9E%E6%8E%A5%E6%B1%A0hikaricp%E6%98%AF%E5%A6%82%E4%BD%95%E8%B5%B7%E4%BD%9C%E7%94%A8%E7%9A%84"}},[a._v("SpringBoot2默认连接池HikariCP是如何起作用的？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%9B%B4%E5%A4%9Ahikaricp%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0"}},[a._v("更多HikariCP配置参数？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88hikaricp%E4%BC%9A%E6%88%90%E4%B8%BA%E9%BB%98%E8%AE%A4%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[a._v("为什么HikariCP会成为默认连接池？")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%BA%90%E7%A0%81%E7%A4%BA%E4%BE%8B"}},[a._v("源码示例")])])])])]),a._v(" "),r("h2",{attrs:{id:"知识准备"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[a._v("¶")]),a._v(" 知识准备")]),a._v(" "),r("blockquote",[r("p",[a._v("需要理解数据库连接池的基本原理，Java DataSource规范，常见的连接池等。部分内容整理自"),r("a",{attrs:{href:"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/1518538?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[a._v("百度百科"),r("OutboundLink")],1)])]),a._v(" "),r("h3",{attrs:{id:"什么是数据库连接池"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据库连接池"}},[a._v("¶")]),a._v(" 什么是数据库连接池？")]),a._v(" "),r("blockquote",[r("p",[a._v("什么是连接池，它要解决什么样的问题呢？")])]),a._v(" "),r("p",[a._v("数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。这项技术能明显提高对数据库操作的性能。")]),a._v(" "),r("h3",{attrs:{id:"数据库连接池基本原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接池基本原理"}},[a._v("¶")]),a._v(" 数据库连接池基本原理？")]),a._v(" "),r("p",[a._v("连接池基本的思想是在系统初始化的时候，将数据库连接作为对象存储在内存中，当用户需要访问数据库时，并非建立一个新的连接，而是从连接池中取出一个已建立的空闲连接对象。使用完毕后，用户也并非将连接关闭，而是将连接放回连接池中，以供下一个请求访问使用。而连接的建立、断开都由连接池自身来管理。同时，还可以通过设置连接池的参数来控制连接池中的初始连接数、连接的上下限数以及每个连接的最大使用次数、最大空闲时间等等。也可以通过其自身的管理机制来监视数据库连接的数量、使用情况等。")]),a._v(" "),r("p",[a._v("数据库连接池的最小连接数和最大连接数的设置要考虑到下列几个因素：")]),a._v(" "),r("ul",[r("li",[a._v("最小连接数")])]),a._v(" "),r("p",[a._v("是连接池一直保持的数据库连接，所以如果应用程序对数据库连接的使用量不大，将会有大量的数据库连接资源被浪费。")]),a._v(" "),r("ul",[r("li",[a._v("最大连接数")])]),a._v(" "),r("p",[a._v("是连接池能申请的最大连接数，如果数据库连接请求超过此数，后面的数据库连接请求将被加入到等待队列中，这会影响之后的数据库操作。")]),a._v(" "),r("ul",[r("li",[a._v("最小连接数与最大连接数差距")])]),a._v(" "),r("p",[a._v("最小连接数与最大连接数相差太大，那么最先的连接请求将会获利，之后超过最小连接数量的连接请求等价于建立一个新的数据库连接。不过，这些大于最小连接数的数据库连接在使用完不会马上被释放，它将被放到连接池中等待重复使用或是空闲超时后被释放。")]),a._v(" "),r("h3",{attrs:{id:"有哪些常见的数据库连接池"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常见的数据库连接池"}},[a._v("¶")]),a._v(" 有哪些常见的数据库连接池？")]),a._v(" "),r("blockquote",[r("p",[a._v("开源的数据库连接池众多，这里我们需要了解曾经常用的开源数据库连接池及其被淘汰原因，并了解目前最常用的数据库连接池。")])]),a._v(" "),r("ul",[r("li",[r("strong",[a._v("C3P0(被淘汰：历史悠久，过于复杂，性能差)")])])]),a._v(" "),r("p",[a._v("是一个开放源代码的JDBC连接池，它在lib目录中与Hibernate一起发布，包括了实现jdbc3和jdbc2扩展规范说明的Connection 和Statement 池的DataSources 对象。由于一度是Hibernate内置的数据库连接池而被开发者熟知，但是由于性能和复杂度，官方已经放弃维护。")]),a._v(" "),r("ul",[r("li",[r("strong",[a._v("DBCP（被淘汰：依赖Commons-Pool，性能差）")]),a._v("\nDBCP（DataBase Connection Pool）属于Apache顶级项目Commons中的核心子项目。但DBCP并不是独立实现连接池功能的，它内部依赖于Commons-Pool项目，连接池最核心的“池”，就是由Commons-Pool组件提供的，因此，DBCP的性能实际上就是Pool的性能。")])]),a._v(" "),r("p",[a._v("终于在tomcat 7.0版本中，tomcat重新设计开发出了一套连接池（"),r("strong",[a._v("Tomcat JDBC Pool")]),a._v("）并且于13年9月发布了Commons-Pool 2.0。命脉已经更新的DBCP终于在14年2月份发布了DBCP2.0。但是，毕竟由于长时间没有更新突破的DBCP，已经被人放弃了。")]),a._v(" "),r("ul",[r("li",[r("strong",[a._v("BoneCP（被淘汰：为解决C3P0/DBCP性能而生，后续出现了更高性能的hikariCP，BoneCP也不再更新）")])])]),a._v(" "),r("p",[a._v("是一个快速、开源的数据库连接池。帮用户管理数据连接，让应用程序能更快速地访问数据库。")]),a._v(" "),r("p",[a._v("BoneCP的出现主要是为了解决C3P0/DBCP连接池性能问题，有一些测试表明其性能提升了25倍。")]),a._v(" "),r("p",[a._v("后来出现了更高性能的hikariCP，BoneCP也不再更新，所以BoneCP目前也很少被使用。")]),a._v(" "),r("ul",[r("li",[a._v("Druid")])]),a._v(" "),r("p",[a._v("druid功能最为全面，sql拦截等功能，统计数据较为全面，具有良好的扩展性")]),a._v(" "),r("h2",{attrs:{id:"springboot2使用hikaricp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot2使用hikaricp"}},[a._v("¶")]),a._v(" SpringBoot2使用HikariCP")]),a._v(" "),r("h3",{attrs:{id:"springboot2默认连接池hikaricp是如何起作用的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot2默认连接池hikaricp是如何起作用的"}},[a._v("¶")]),a._v(" SpringBoot2默认连接池HikariCP是如何起作用的？")]),a._v(" "),r("h3",{attrs:{id:"更多hikaricp配置参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更多hikaricp配置参数"}},[a._v("¶")]),a._v(" 更多HikariCP配置参数？")]),a._v(" "),r("h3",{attrs:{id:"为什么hikaricp会成为默认连接池"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么hikaricp会成为默认连接池"}},[a._v("¶")]),a._v(" 为什么HikariCP会成为默认连接池？")]),a._v(" "),r("p",[a._v("https://www.jianshu.com/p/7e4c0e9ad49a")]),a._v(" "),r("h2",{attrs:{id:"源码示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源码示例"}},[a._v("¶")]),a._v(" 源码示例")]),a._v(" "),r("p",[a._v("https://github.dev/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);t.default=E.exports}}]);