(window.webpackJsonp=window.webpackJsonp||[]).push([[576],{1037:function(t,s,e){"use strict";e.r(s);var o=e(11),i=Object(o.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring-boot---websocket-demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot---websocket-demo"}},[t._v("¶")]),t._v(" Spring Boot - Websocket Demo")]),t._v(" "),e("blockquote",[e("p",[t._v("从网上找的Websocket Demo例子，说说其中的缺陷: (无所谓了只是一个socket demo而已)@pdai.")])]),t._v(" "),e("ul",[e("li",[t._v("disruptor配置不合理；")]),t._v(" "),e("li",[t._v("前端日志没有清空，数据量大了，前端卡爆了；")]),t._v(" "),e("li",[t._v("数据量大时消息丢失；")])]),t._v(" "),e("blockquote",[e("p",[t._v("spring boot系统中使用websocket技术实时输出系统日志到浏览器端，因为是实时输出，所有第一时间就想到了使用webSocket,而且在spring boot中，使用websocket超级方便，阅读本文，你会接触到以下关键词相关技术，WebSocket(stopmp服务端)，stomp协议，sockjs.min.js，stomp.min.js(stomp客户端)，本文使用到的其实就是使用spring boot自带的webSocket模块提供stomp的服务端，前端使用stomp.min.js做stomp的客户端，使用sockjs来链接，前端订阅后端日志端点的消息，后端实时推送，达到日志实时输出到web页面的目的")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#spring-boot---websocket-demo"}},[t._v("Spring Boot - Websocket Demo")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#websocket%e5%8e%9f%e7%90%86"}},[t._v("websocket原理")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b"}},[t._v("代码示例")])])])])]),t._v(" "),e("h2",{attrs:{id:"websocket原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#websocket原理"}},[t._v("¶")]),t._v(" websocket原理")]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"输入图片说明",title:"屏幕截图.png","data-src":"/_images/spring/springboot-data-websocket-1.png",loading:"lazy"}})]),t._v(" "),e("h2",{attrs:{id:"代码示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[t._v("¶")]),t._v(" 代码示例")]),t._v(" "),e("p",[t._v("@See https://github.com/realpdai/springboot-websocket-demo")]),t._v(" "),e("p",[t._v("一些参考")]),t._v(" "),e("ul",[e("li",[t._v("stomp.js客户端: http://jmesnil.net/stomp-websocket/doc/")]),t._v(" "),e("li",[t._v("scok.js客户端: https://github.com/sockjs/sockjs-client")]),t._v(" "),e("li",[t._v("spring webSocket: https://docs.spring.io/spring/docs/")]),t._v(" "),e("li",[t._v("高性能无锁队列disruptor: https://github.com/LMAX-Exchange/disruptor")])])])}),[],!1,null,null,null);s.default=i.exports}}]);