(window.webpackJsonp=window.webpackJsonp||[]).push([[481],{946:function(a,v,t){"use strict";t.r(v);var e=t(11),l=Object(e.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"♥jvm相关知识体系详解♥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#♥jvm相关知识体系详解♥"}},[a._v("¶")]),a._v(" ♥JVM相关知识体系详解♥")]),a._v(" "),t("blockquote",[t("p",[a._v("本系列将给大家构建JVM核心知识点全局知识体系。@pdai")])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#jvm%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3"}},[a._v("♥JVM相关知识体系详解♥")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB"}},[a._v("知识体系")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%AD%A6%E4%B9%A0%E8%A6%81%E7%82%B9"}},[a._v("学习要点")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%AD%A6%E4%B9%A0%E6%96%87%E7%8C%AE"}},[a._v("学习文献")])])])])]),a._v(" "),t("h2",{attrs:{id:"知识体系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识体系"}},[a._v("¶")]),a._v(" 知识体系")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/jvm/jvm-overview.png",loading:"lazy"}})]),a._v(" "),t("h2",{attrs:{id:"学习要点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习要点"}},[a._v("¶")]),a._v(" 学习要点")]),a._v(" "),t("blockquote",[t("p",[a._v("不同的虚拟机实现方式上也有差别，如果没有特别指出，这里的JVM指的是sun的HotSpot；不同的JDK版本略有差别，这里主要以1.8为主，具体差异请看各个章节中详解。下图主要表示的逻辑关系，用来将所有知识点放到一张图里，帮助你理解。")])]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/jvm/java-jvm-overview.png",loading:"lazy"}})]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("A. Java进阶 - JVM相关 知识体系")]),a._v("： 首先按照上述"),t("code",[a._v("学习思路")]),a._v("，理解总体知识点在全局上与知识体系之间的对应关系。")])]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-x-overview.html"}},[a._v("JVM 相关知识体系")])],1)]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("B. Java进阶 - JVM相关 类加载")]),a._v("： 然后理解类字节码和类的加载机制。")])]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-class.html"}},[a._v("JVM基础 - 类字节码详解")]),a._v(" "),t("ul",[t("li",[a._v("源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-classload.html"}},[a._v("JVM基础 - Java 类加载机制")]),a._v(" "),t("ul",[t("li",[a._v("这篇文章将带你深入理解Java 类加载机制")])])],1)]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("C. Java进阶 - JVM相关 内存结构")]),a._v("： 因为类字节码是加载到JVM内存结构中的，所以紧接着理解JVM内存结构。")])]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-struct.html"}},[a._v("JVM基础 - JVM内存结构")]),a._v(" "),t("ul",[t("li",[a._v("本文主要对JVM 内存结构进行讲解，注意不要和Java内存模型混淆了")])])],1)]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("D. Java进阶 - JVM相关 JMM")]),a._v("： 然后通过理解JVM与硬件之间的联系，理解Java 通过其内存模型保证数据线程安全等，这是JVM在并发上底层的支持。")])]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-x-introduce.html"}},[a._v("JVM基础 - Java 内存模型引入")]),a._v(" "),t("ul",[t("li",[a._v("很多人都Java内存模型和JVM内存结构，以及Java内存模型与物理内存之间的关系。本文从堆栈角度引入JMM，然后介绍JMM和物理内存之间的关系, 为后面"),t("code",[a._v("JMM详解")]),a._v(", "),t("code",[a._v("JVM 内存结构详解")]),a._v(", "),t("code",[a._v("Java 对象模型详解")]),a._v("等铺垫。")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-jmm.html"}},[a._v("JVM基础 - Java 内存模型详解")]),a._v(" "),t("ul",[t("li",[a._v("本文主要转载自 Info 上"),t("a",{attrs:{href:"https://www.infoq.cn/article/java_memory_model/",target:"_blank",rel:"noopener noreferrer"}},[a._v("深入理解Java内存模型"),t("OutboundLink")],1),a._v(", 作者程晓明。这篇文章对JMM讲的很清楚了，大致分三部分：重排序与顺序一致性；三个同步原语（lock，volatile，final）的内存语义，重排序规则及在处理器中的实现；java 内存模型的设计，及其与处理器内存模型和顺序一致性内存模型的关系")])])],1)]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("E. Java进阶 - JVM相关 GC")]),a._v("： 再者理解下Java GC机制，如何回收内存等。")])]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-gc.html"}},[a._v("JVM基础 - Java 垃圾收集")]),a._v(" "),t("ul",[t("li",[a._v("垃圾收集主要是针对堆和方法区进行")])])],1)]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("F. Java进阶 - JVM相关 排错调优")]),a._v("： 最后围绕着调试和排错，分析理解JVM调优参数，动态字节码技术及动态在线调试的原理；学会使用常用的调工具和在线动态调试工具等。")])]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":"https://pdai-1257820000.cos.ap-beijing.myqcloud.com/pdai.tech/public/_images/jvm/java-jvm-debug.png",loading:"lazy"}})]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-param.html"}},[a._v("调试排错 - JVM 调优参数")]),a._v(" "),t("ul",[t("li",[a._v("本文对JVM涉及的常见的调优参数和垃圾回收参数进行阐述")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-oom.html"}},[a._v("调试排错 - Java OOM 分析")]),a._v(" "),t("ul",[t("li",[a._v("本文以两个简单的例子("),t("code",[a._v("堆内存溢出")]),a._v("和"),t("code",[a._v("MetaSpace (元数据) 内存溢出")]),a._v("）解释Java 内存溢出的分析过程")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-debug-tools-linux.html"}},[a._v("调试排错 - Java问题排查：Linux命令")]),a._v(" "),t("ul",[t("li",[a._v("Java 在线问题排查主要分两篇：本文是第一篇，通过linux常用命令排查")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-debug-tools-list.html"}},[a._v("调试排错 - Java问题排查：工具单")]),a._v(" "),t("ul",[t("li",[a._v("Java 在线问题排查主要分两篇：本文是第二篇，通过java调试/排查工具进行问题定位")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-cms-gc.html"}},[a._v("调试排错 - 9种常见的CMS GC问题分析与解决")]),a._v(" "),t("ul",[t("li",[a._v("本文整理自"),t("a",{attrs:{href:"https://tech.meituan.com/2020/11/12/java-9-cms-gc.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("美团技术团队"),t("OutboundLink")],1),a._v(", 这篇文章将可以帮助你构建CMS GC相关问题解决的知识体系，分享给你。")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-agent-usage.html"}},[a._v("调试排错 - Java动态调试技术原理")]),a._v(" "),t("ul",[t("li",[a._v("本文转载自 美团技术团队胡健的"),t("a",{attrs:{href:"https://tech.meituan.com/2019/11/07/java-dynamic-debugging-technology.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 动态调试技术原理及实践"),t("OutboundLink")],1),a._v(", 通过学习java agent方式进行动态调试了解目前很多大厂开源的一些基于此的调试工具。")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-agent-arthas.html"}},[a._v("调试排错 - Java应用在线调试Arthas")]),a._v(" "),t("ul",[t("li",[a._v("本文主要介绍Alibaba开源的Java诊断工具，开源到现在已经1.7万个点赞了，深受开发者喜爱。具体解决在线问题，比如：")]),a._v(" "),t("li",[a._v("这个类从哪个 jar 包加载的? 为什么会报各种类相关的 Exception?")]),a._v(" "),t("li",[a._v("我改的代码为什么没有执行到? 难道是我没 commit? 分支搞错了?")]),a._v(" "),t("li",[a._v("遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗?")]),a._v(" "),t("li",[a._v("线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！")]),a._v(" "),t("li",[a._v("是否有一个全局视角来查看系统的运行状况?")]),a._v(" "),t("li",[a._v("有什么办法可以监控到JVM的实时运行状态?")])])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/md/java/jvm/java-jvm-debug-idea.html"}},[a._v("调试排错 - 使用IDEA本地调试和远程调试")]),a._v(" "),t("ul",[t("li",[a._v("Debug用来追踪代码的运行流程，通常在程序运行过程中出现异常，启用Debug模式可以分析定位异常发生的位置，以及在运行过程中参数的变化；并且在实际的排错过程中，还会用到Remote Debug。IDEA 相比 Eclipse/STS效率更高，本文主要介绍基于IDEA的Debug和Remote Debug的技巧。")])])],1)]),a._v(" "),t("h2",{attrs:{id:"学习文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习文献"}},[a._v("¶")]),a._v(" 学习文献")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java虚拟机规范（Java SE 8）"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"http://www.cs.umd.edu/~pugh/java/memoryModel/jsr133.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("JSR-133: JavaTM Memory Model and Thread Specification"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=l.exports}}]);