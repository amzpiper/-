(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{666:function(s,e,t){"use strict";t.r(e);var v=t(11),_=Object(v.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis入门---redis概念和基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis入门---redis概念和基础"}},[s._v("¶")]),s._v(" Redis入门 - Redis概念和基础")]),s._v(" "),t("blockquote",[t("p",[s._v("Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#redis%E5%85%A5%E9%97%A8---redis%E6%A6%82%E5%BF%B5%E5%92%8C%E5%9F%BA%E7%A1%80"}},[s._v("Redis入门 - Redis概念和基础")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFredis"}},[s._v("什么是Redis")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%AE%98%E6%96%B9%E8%B5%84%E6%96%99"}},[s._v("官方资料")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8redis"}},[s._v("为什么要使用Redis")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#redis%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF"}},[s._v("Redis的使用场景")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%83%AD%E7%82%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BC%93%E5%AD%98"}},[s._v("热点数据的缓存")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E9%99%90%E6%97%B6%E4%B8%9A%E5%8A%A1%E7%9A%84%E8%BF%90%E7%94%A8"}},[s._v("限时业务的运用")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%AE%A1%E6%95%B0%E5%99%A8%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98"}},[s._v("计数器相关问题")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81"}},[s._v("分布式锁")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%BB%B6%E6%97%B6%E6%93%8D%E4%BD%9C"}},[s._v("延时操作")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%8E%92%E8%A1%8C%E6%A6%9C%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98"}},[s._v("排行榜相关问题")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E7%82%B9%E8%B5%9E%E5%A5%BD%E5%8F%8B%E7%AD%89%E7%9B%B8%E4%BA%92%E5%85%B3%E7%B3%BB%E7%9A%84%E5%AD%98%E5%82%A8"}},[s._v("点赞、好友等相互关系的存储")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E7%AE%80%E5%8D%95%E9%98%9F%E5%88%97"}},[s._v("简单队列")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[s._v("参考文章")])])])])]),s._v(" "),t("h2",{attrs:{id:"什么是redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是redis"}},[s._v("¶")]),s._v(" 什么是Redis")]),s._v(" "),t("p",[s._v("Redis是一款内存高速缓存数据库。Redis全称为："),t("strong",[s._v("Remote Dictionary Server")]),s._v("（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。")]),s._v(" "),t("p",[s._v("Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化。")]),s._v(" "),t("h3",{attrs:{id:"官方资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#官方资料"}},[s._v("¶")]),s._v(" 官方资料")]),s._v(" "),t("p",[s._v("Redis官网:http://redis.io/")]),s._v(" "),t("p",[s._v("Redis官方文档:http://redis.io/documentation")]),s._v(" "),t("p",[s._v("Redis教程:http://www.w3cschool.cn/redis/redis-intro.html")]),s._v(" "),t("p",[s._v("Redis下载:http://redis.io/download")]),s._v(" "),t("h2",{attrs:{id:"为什么要使用redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用redis"}},[s._v("¶")]),s._v(" 为什么要使用Redis")]),s._v(" "),t("blockquote",[t("p",[s._v("一个产品的使用场景肯定是需要根据产品的特性，先列举一下Redis的特点：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("读写性能优异")]),s._v(" "),t("ul",[t("li",[s._v("Redis能读的速度是110000次/s,写的速度是81000次/s （测试条件见下一节）。")])])]),s._v(" "),t("li",[t("strong",[s._v("数据类型丰富")]),s._v(" "),t("ul",[t("li",[s._v("Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。")])])]),s._v(" "),t("li",[t("strong",[s._v("原子性")]),s._v(" "),t("ul",[t("li",[s._v("Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。")])])]),s._v(" "),t("li",[t("strong",[s._v("丰富的特性")]),s._v(" "),t("ul",[t("li",[s._v("Redis支持 publish/subscribe, 通知, key 过期等特性。")])])]),s._v(" "),t("li",[t("strong",[s._v("持久化")]),s._v(" "),t("ul",[t("li",[s._v("Redis支持RDB, AOF等持久化方式")])])]),s._v(" "),t("li",[t("strong",[s._v("发布订阅")]),s._v(" "),t("ul",[t("li",[s._v("Redis支持发布/订阅模式")])])]),s._v(" "),t("li",[t("strong",[s._v("分布式")]),s._v(" "),t("ul",[t("li",[s._v("Redis Cluster")])])])]),s._v(" "),t("p",[s._v("（PS: 具体再结合下面的使用场景理解下）")]),s._v(" "),t("blockquote",[t("p",[s._v("下面是官方的bench-mark根据如下条件获得的性能测试（"),t("strong",[s._v("读的速度是110000次/s,写的速度是81000次/s")]),s._v("）")])]),s._v(" "),t("ul",[t("li",[s._v("测试完成了50个并发执行100000个请求。")]),s._v(" "),t("li",[s._v("设置和获取的值是一个256字节字符串。")]),s._v(" "),t("li",[s._v("Linux box是运行Linux 2.6,这是X3320 Xeon 2.5 ghz。")]),s._v(" "),t("li",[s._v("文本执行使用loopback接口(127.0.0.1)。")])]),s._v(" "),t("h2",{attrs:{id:"redis的使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis的使用场景"}},[s._v("¶")]),s._v(" Redis的使用场景")]),s._v(" "),t("blockquote",[t("p",[s._v("redis应用场景总结redis平时我们用到的地方蛮多的，下面就了解的应用场景做个总结：")])]),s._v(" "),t("h3",{attrs:{id:"热点数据的缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#热点数据的缓存"}},[s._v("¶")]),s._v(" 热点数据的缓存")]),s._v(" "),t("p",[s._v("缓存是Redis最常见的应用场景，之所有这么使用，主要是因为Redis读写性能优异。而且逐渐有取代memcached，成为首选服务端缓存的组件。而且，Redis内部是支持事务的，在使用时候能有效保证数据的一致性。")]),s._v(" "),t("p",[s._v("作为缓存使用时，一般有两种方式保存数据：")]),s._v(" "),t("ul",[t("li",[s._v("读取前，先去读Redis，如果没有数据，读取数据库，将数据拉入Redis。")]),s._v(" "),t("li",[s._v("插入数据时，同时写入Redis。")])]),s._v(" "),t("p",[s._v("方案一：实施起来简单，但是有两个需要注意的地方：")]),s._v(" "),t("ul",[t("li",[s._v("避免缓存击穿。（数据库没有就需要命中的数据，导致Redis一直没有数据，而一直命中数据库。）")]),s._v(" "),t("li",[s._v("数据的实时性相对会差一点。")])]),s._v(" "),t("p",[s._v("方案二：数据实时性强，但是开发时不便于统一处理。")]),s._v(" "),t("p",[s._v("当然，两种方式根据实际情况来适用。如：方案一适用于对于数据实时性要求不是特别高的场景。方案二适用于字典表、数据量不大的数据存储。")]),s._v(" "),t("h3",{attrs:{id:"限时业务的运用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限时业务的运用"}},[s._v("¶")]),s._v(" 限时业务的运用")]),s._v(" "),t("p",[s._v("redis中可以使用expire命令设置一个键的生存时间，到时间后redis会删除它。利用这一特性可以运用在限时的优惠活动信息、手机验证码等业务场景。")]),s._v(" "),t("h3",{attrs:{id:"计数器相关问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计数器相关问题"}},[s._v("¶")]),s._v(" 计数器相关问题")]),s._v(" "),t("p",[s._v("redis由于incrby命令可以实现原子性的递增，所以可以运用于高并发的秒杀活动、分布式序列号的生成、具体业务还体现在比如限制一个手机号发多少条短信、一个接口一分钟限制多少请求、一个接口一天限制调用多少次等等。")]),s._v(" "),t("h3",{attrs:{id:"分布式锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("¶")]),s._v(" 分布式锁")]),s._v(" "),t("p",[s._v('这个主要利用redis的setnx命令进行，setnx："set if not exists"就是如果不存在则成功设置缓存同时返回1，否则返回0 ，这个特性在俞你奔远方的后台中有所运用，因为我们服务器是集群的，定时任务可能在两台机器上都会运行，所以在定时任务中首先 通过setnx设置一个lock，\n如果成功设置则执行，如果没有成功设置，则表明该定时任务已执行。 当然结合具体业务，我们可以给这个lock加一个过期时间，比如说30分钟执行一次的定时任务，那么这个过期时间设置为小于30分钟的一个时间就可以，这个与定时任务的周期以及定时任务执行消耗时间相关。')]),s._v(" "),t("p",[s._v("在分布式锁的场景中，主要用在比如秒杀系统等。")]),s._v(" "),t("h3",{attrs:{id:"延时操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#延时操作"}},[s._v("¶")]),s._v(" 延时操作")]),s._v(" "),t("p",[s._v("比如在订单生产后我们占用了库存，10分钟后去检验用户是够真正购买，如果没有购买将该单据设置无效，同时还原库存。 由于redis自2.8.0之后版本提供Keyspace Notifications功能，允许客户订阅Pub/Sub频道，以便以某种方式接收影响Redis数据集的事件。 所以我们对于上面的需求就可以用以下解决方案，我们在订单生产时，设置一个key，同时设置10分钟后过期， 我们在后台实现一个监听器，监听key的实效，监听到key失效时将后续逻辑加上。")]),s._v(" "),t("p",[s._v("当然我们也可以利用rabbitmq、activemq等消息中间件的延迟队列服务实现该需求。")]),s._v(" "),t("h3",{attrs:{id:"排行榜相关问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排行榜相关问题"}},[s._v("¶")]),s._v(" 排行榜相关问题")]),s._v(" "),t("p",[s._v("关系型数据库在排行榜方面查询速度普遍偏慢，所以可以借助redis的SortedSet进行热点数据的排序。")]),s._v(" "),t("p",[s._v("比如点赞排行榜，做一个SortedSet, 然后以用户的openid作为上面的username, 以用户的点赞数作为上面的score, 然后针对每个用户做一个hash, 通过zrangebyscore就可以按照点赞数获取排行榜，然后再根据username获取用户的hash信息，这个当时在实际运用中性能体验也蛮不错的。")]),s._v(" "),t("h3",{attrs:{id:"点赞、好友等相互关系的存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点赞、好友等相互关系的存储"}},[s._v("¶")]),s._v(" 点赞、好友等相互关系的存储")]),s._v(" "),t("p",[s._v("Redis 利用集合的一些命令，比如求交集、并集、差集等。")]),s._v(" "),t("p",[s._v("在微博应用中，每个用户关注的人存在一个集合中，就很容易实现求两个人的共同好友功能。")]),s._v(" "),t("h3",{attrs:{id:"简单队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单队列"}},[s._v("¶")]),s._v(" 简单队列")]),s._v(" "),t("p",[s._v("由于Redis有list push和list pop这样的命令，所以能够很方便的执行队列操作。")]),s._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("¶")]),s._v(" 参考文章")]),s._v(" "),t("ul",[t("li",[s._v("https://baike.baidu.com/item/Redis/6549233?fr=aladdin")]),s._v(" "),t("li",[s._v("https://zhuanlan.zhihu.com/p/29665317")]),s._v(" "),t("li",[s._v("https://www.jianshu.com/p/40dbc78711c8")])])])}),[],!1,null,null,null);e.default=_.exports}}]);